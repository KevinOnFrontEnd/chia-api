openapi: 3.0.3
info:
  description: "The Chia node and services come with a JSON RPC API server that allows you to access information and control the services. These are accessible via HTTP, WebSockets, or via client SDKs. The ports can be configured in ~/.chia/mainnet/config/config.yaml. The RPC ports should not be exposed to the internet. TLS certificates are used to secure the communication."
  version: 1.2.11
  title: Chia RPC
  termsOfService: https://www.chia.net/assets/legal/Guidelines-for-Using-Chia-Network.pdf
  contact:
    name: Chia Network
    url: https://www.chia.net/
    email: hello@chia.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://localhost:9256
    description: Wallet RPC
security:
  - bearerAuth: []
components:
  requestBodies:
    empty:
      $ref: "./requestBodies/empty.yaml#/empty"
    wallet_id:
      $ref: "./requestBodies/wallet_id.yaml#/wallet_id"
    fingerprint:
      $ref: "./requestBodies/fingerprint.yaml#/fingerprint"
  responses:
    empty:
      $ref: "./responses/empty.yaml#/empty"
    fingerprint:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              fingerprint:
                type: integer
                format: uint32
            allOf:
              - $ref: "#/components/schemas/apiResponse"
  schemas:
    mnemonic:
      $ref: "./schemas/mnemonic.yaml#/mnemonic"
    network_info:
      $ref: "./schemas/network_info.yaml#/network_info"
    private_key:
      $ref: "./schemas/private_key.yaml#/private_key"
    wallet_balance:
      $ref: "./schemas/wallet_balance.yaml#/wallet_balance"
    apiResponse:
      $ref: "./schemas/apiResponse.yaml#/apiResponse"
  securitySchemes:
    bearerAuth:
      $ref: "./securitySchemes/bearerAuth.yaml#/bearerAuth"
tags:
  - name: Wallet Node
    description: The wallet RPC API is exposed, by default, on port 9256 and contains methods for managing wallet, trades, offers and transactions.
  - name: Wallet
    description: Methods for shared wallet operations.
  - name: Key Management
    description: Methods for managing keys.
paths:
  /get_wallet_balance:
    post:
      tags:
        - Wallet
      summary: Get the balance of a specific wallet.
      description: Get the balance of a specific wallet (in units of mojos).
      operationId: get_wallet_balance
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - wallet_balance
                properties:
                  wallet_balance:
                    $ref: "#/components/schemas/wallet_balance"
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
  /get_network_info:
    post:
      tags:
        - Wallet Node
      summary: Retrieves some information about the current network.
      description: Retrieves some information about the current network.
      operationId: wallet_get_network_info
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/network_info"
                  - $ref: "#/components/schemas/apiResponse"
  /log_in:
    post:
      tags:
        - Key Management
      summary: Logs in the wallet with a specific key.
      description: Logs in the wallet with a specific key.
      operationId: log_in
      requestBody:
        $ref: "#/components/requestBodies/fingerprint"
      responses:
        200:
          $ref: "#/components/responses/fingerprint"
  /get_logged_in_fingerprint:
    post:
      tags:
        - Key Management
      summary: Retrieves the logged in fingerprint.
      description: Retrieves the logged in fingerprint.
      operationId: get_logged_in_fingerprint
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        200:
          $ref: "#/components/responses/fingerprint"
  /get_public_keys:
    post:
      tags:
        - Key Management
      summary: Retrieves all public keys on the node.
      description: Retrieves all public keys on the node.
      operationId: get_public_keys
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      public_key_fingerprints:
                        type: array
                        items:
                          type: integer
                          format: uint32
                  - type: object
                    properties:
                      keyring_is_locked:
                        type: boolean
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
  /get_private_key:
    post:
      tags:
        - Key Management
      summary: Retrieves the private key by fingerprint.
      description: Retrieves the private key by fingerprint.
      operationId: get_private_key
      requestBody:
        $ref: "#/components/requestBodies/fingerprint"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: Return type if the private key is found.
                    properties:
                      private_key:
                        $ref: "#/components/schemas/private_key"
                  - type: object
                    description: Return type if the privte key is not found.
                    properties:
                      private_key:
                        type: object
                        properties:
                          fingerprint:
                            type: integer
                            format: uint32
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
  /generate_mnemonic:
    post:
      tags:
        - Key Management
      summary: Generates a new mnemonic phrase.
      description: Generates a new mnemonic phrase.
      operationId: generate_mnemonic
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mnemonic"
  /add_key:
    post:
      tags:
        - Key Management
      summary: Generates a new mnemonic phrase.
      description: Generates a new mnemonic phrase.
      operationId: add_key
      requestBody:
        description: The mnemonic phrase.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mnemonic"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: The fingerprint of the new key.
                properties:
                  private_key:
                    type: object
                    properties:
                      fingerprint:
                        type: integer
                        format: uint32
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
  /delete_key:
    post:
      tags:
        - Key Management
      summary: Deletes all keys which have the given public key fingerprint.
      description: Deletes all keys which have the given public key fingerprint.
      operationId: delete_key
      requestBody:
        $ref: "#/components/requestBodies/fingerprint"
      responses:
        200:
          $ref: "#/components/responses/empty"
  /check_delete_key:
    post:
      tags:
        - Key Management
      summary: Determines if it is safe to delete a private key.
      description: Determines if it is safe to delete a private key. Returns whether it is used for farming, pooling, or has a balance.
      operationId: check_delete_key
      requestBody:
        $ref: "#/components/requestBodies/fingerprint"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  fingerprint:
                    type: integer
                    format: uint32
                  used_for_farmer_rewards:
                    type: boolean
                  used_for_pool_rewards:
                    type: boolean
                  wallet_balance:
                    type: boolean
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
  /delete_all_keys:
    post:
      tags:
        - Key Management
      summary: Deletes all keys from the keychain.
      description: Deletes all keys from the keychain.
      operationId: wallet_delete_all_keys
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        200:
          $ref: "#/components/responses/empty"
externalDocs:
  description: Find out more about chia
  url: http://chia.net
