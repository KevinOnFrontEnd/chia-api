openapi: 3.0.3
info:
  description: >-
    The Chia node and services come with a JSON RPC API server that allows you to access information and control the services. 
    These are accessible via HTTPS, WebSockets, or via client SDKs. The ports can be configured in `~/.chia/mainnet/config/config.yaml`. 
    The RPC ports should not be exposed to the internet. TLS certificates are used to secure the communication 
    [using mutualTLS](https://github.com/dkackman/chia-api/wiki/Mutual-TLS).

    The wallet uses port 9256 by default.
  version: 1.3.0
  title: Chia RPC
  termsOfService: https://www.chia.net/assets/legal/Guidelines-for-Using-Chia-Network.pdf
  contact:
    name: Chia Network
    url: https://www.chia.net/
    email: hello@chia.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://localhost:9256
    description: Wallet RPC
security:
  - bearerAuth: []
components:
  requestBodies:
    empty:
      $ref: "./requestBodies/empty.yaml#/empty"
    fingerprint:
      $ref: "./requestBodies/fingerprint.yaml#/fingerprint"
    wallet_id:
      $ref: "./requestBodies/wallet_id.yaml#/wallet_id"
    transaction_id:
      $ref: "./requestBodies/transaction_id.yaml#/transaction_id"
  responses:
    empty:
      $ref: "./responses/empty.yaml#/empty"
    fingerprint:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  fingerprint:
                    type: integer
                    format: uint32
              - $ref: "#/components/schemas/apiResponse"
    transaction_record:
      description: OK response with a transaction record and a transaction id.
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  transaction:
                    $ref: "#/components/schemas/transaction_record"
                  transaction_id:
                    type: string
                    format: hex
              - $ref: "#/components/schemas/apiResponse"
  schemas:
    amount_with_puzzlehash:
      $ref: "./schemas/amount_with_puzzlehash.yaml#/amount_with_puzzlehash"
    coin_announcement:
      $ref: "./schemas/coin_announcement.yaml#/coin_announcement"
    puzzle_announcement:
      $ref: "./schemas/puzzle_announcement.yaml#/puzzle_announcement"
    cat_info:
      $ref: "./schemas/cat_info.yaml#/cat_info"
    coin:
      $ref: "./schemas/coin.yaml#/coin"
    farmer_rewards:
      $ref: "./schemas/farmer_rewards.yaml#/farmer_rewards"
    mnemonic:
      $ref: "./schemas/mnemonic.yaml#/mnemonic"
    network_info:
      $ref: "./schemas/network_info.yaml#/network_info"
    pool_state:
      $ref: "./schemas/pool_state.yaml#/pool_state"
    pool_wallet_info:
      $ref: "./schemas/pool_wallet_info.yaml#/pool_wallet_info"
    private_key:
      $ref: "./schemas/private_key.yaml#/private_key"
    spend_bundle:
      $ref: "./schemas/spend_bundle.yaml#/spend_bundle"
    trade_record:
      $ref: "./schemas/trade_record.yaml#/trade_record"
    transaction_input:
      $ref: "./schemas/transaction_input.yaml#/transaction_input"
    transaction_record:
      $ref: "./schemas/transaction_record.yaml#/transaction_record"
    transaction_type:
      $ref: "./schemas/transaction_type.yaml#/transaction_type"
    wallet_balance:
      $ref: "./schemas/wallet_balance.yaml#/wallet_balance"
    wallet_info:
      $ref: "./schemas/wallet_info.yaml#/wallet_info"
    wallet_type:
      $ref: "./schemas/wallet_type.yaml#/wallet_type"
    apiResponse:
      $ref: "./schemas/apiResponse.yaml#/apiResponse"
  securitySchemes:
    bearerAuth:
      $ref: "./securitySchemes/bearerAuth.yaml#/bearerAuth"
tags:
  - name: CAT Wallet
    description: CATs, trades, and offers.
  - name: DID Wallet
    description: Distributed Identity wallet.
  - name: Key Management
    description: Methods for managing keys.
  - name: Pool Wallet
    description: Pool wallet api.
  - name: Rate Limited Wallet
    description: Rate limited wallet api.
  - name: Wallet
    description: Methods for shared wallet operations.
  - name: Wallet Management
    description: Methods for creating and managing wallets.
  - name: Wallet Node
    description: The wallet RPC API is exposed, by default, on port 9256 and contains methods for managing wallet, trades, offers and transactions.
paths:
  /did_create_backup_file:
    post:
      tags:
        - DID Wallet
      summary: Creates a backup file for the given DID wallet.
      description: Creates a backup file for the given DID wallet.
      operationId: did_create_backup_file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - filename
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                filename:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /did_get_information_needed_for_recovery:
    post:
      tags:
        - DID Wallet
      summary: Retrieves the recovery information needed for the given DID wallet.
      description: Retrieves the recovery information needed for the given DID wallet.
      operationId: did_get_information_needed_for_recovery
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      my_did:
                        type: string
                      coin_name:
                        type: string
                      newpuzhash:
                        type: string
                      pubkey:
                        type: string
                      backup_dids:
                        type: array
                        items:
                          type: string
                  - $ref: "#/components/schemas/apiResponse"
  /did_create_attest:
    post:
      tags:
        - DID Wallet
      summary: Creates an attestation file for the given DID wallet.
      description: Creates an attestation file for the given DID wallet.
      operationId: did_create_attest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - coin_name
                - pubkey
                - puzhash
                - filename
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                coin_name:
                  type: string
                  format: hex
                pubkey:
                  type: string
                  format: hex
                puzhash:
                  type: string
                  format: hex
                filename:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      pubkey:
                        type: string
                        format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /did_get_pubkey:
    post:
      tags:
        - DID Wallet
      summary: Retrieves the public key for the given DID wallet.
      description: Retrieves the public key for the given DID wallet.
      operationId: did_get_pubkey
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      pubkey:
                        type: string
                        format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /did_recovery_spend:
    post:
      tags:
        - DID Wallet
      summary: Spend from the given DID wallet.
      description: Spend from the given DID wallet.
      operationId: did_recovery_spend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - attest_filenames
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                attest_filenames:
                  type: array
                  items:
                    type: string
                pubkey:
                  type: string
                  format: hex
                puzhash:
                  type: string
                  format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      reason:
                        type: string
                        description: >-
                          The optional reason that the spend failed:
                            if len(request["attest_filenames"]) < wallet.did_info.num_of_backup_ids_needed:
                              return {"success": False, "reason": "insufficient messages"}
                  - $ref: "#/components/schemas/apiResponse"
  /did_get_recovery_list:
    post:
      tags:
        - DID Wallet
      summary: Retrieves the recovery list for a given DID wallet.
      description: Retrieves the recovery list for a given DID wallet.
      operationId: did_get_recovery_list
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      recover_list:
                        type: array
                        items:
                          type: string
                          format: hex
                      num_required:
                        type: integer
                        format: uint64
                  - $ref: "#/components/schemas/apiResponse"
  /did_get_did:
    post:
      tags:
        - DID Wallet
      summary: Retrieves the distributed identity for a given wallet.
      description: Retrieves the distributed identity for a given wallet.
      operationId: did_get_did
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      my_did:
                        type: string
                      coin_id:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /did_update_recovery_ids:
    post:
      tags:
        - DID Wallet
      summary: Updates the recovery ids for a DID wallet.
      description: Updates the recovery ids for a DID wallet.
      operationId: did_update_recovery_ids
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                new_list:
                  type: array
                  items:
                    type: string
                    format: hex
                num_verifications_required:
                  type: integer
                  format: uint64
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /take_offer:
    post:
      tags:
        - CAT Wallet
      summary: Takes an offer.
      description: Takes an offer.
      operationId: take_offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - offer
              properties:
                offer:
                  type: string
                  format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      trade_record:
                        $ref: "#/components/schemas/trade_record"
                  - $ref: "#/components/schemas/apiResponse"
  /get_offers_count:
    post:
      tags:
        - CAT Wallet
      summary: Retrieves the number of offers.
      description: Retrieves the number of offers.
      operationId: get_offers_count
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      total:
                        type: integer
                      my_offers_count:
                        type: integer
                      taken_offers_count:
                        type: integer
                  - $ref: "#/components/schemas/apiResponse"
  /get_cat_list:
    post:
      tags:
        - CAT Wallet
      summary: Retrieves the list of CATs.
      description: Retrieves the list of CATs.
      operationId: get_cat_list
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      cat_list:
                        type: array
                        description: Default list of CATs
                        items:
                          $ref: "#/components/schemas/cat_info"
                  - $ref: "#/components/schemas/apiResponse"
  /cancel_offer:
    post:
      tags:
        - CAT Wallet
      summary: Cancels an offer.
      description: Cancels an offer.
      operationId: cancel_offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - trade_id
                - secure
              properties:
                trade_id:
                  type: string
                  format: hex
                fee:
                  type: integer
                  format: uint64
                  default: 0
                secure:
                  type: boolean
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /get_offer:
    post:
      tags:
        - CAT Wallet
      summary: Retrieves an offer.
      description: Retrieves an offer.
      operationId: get_offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - trade_id
              properties:
                trade_id:
                  type: string
                  format: hex
                file_contents:
                  type: boolean
                  description: Indicator as to whether to return the offer contents
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      trade_record:
                        $ref: "#/components/schemas/trade_record"
                      offer:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /get_all_offers:
    post:
      tags:
        - CAT Wallet
      summary: Retrieves offers.
      description: Retrieves offers.
      operationId: get_all_offers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start:
                  type: integer
                  default: 0
                end:
                  type: integer
                  default: 10
                exclude_my_offers:
                  type: boolean
                exclude_taken_offers:
                  type: boolean
                include_completed:
                  type: boolean
                sort_key:
                  type: string
                reverse:
                  type: boolean
                file_contents:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      trade_records:
                        type: array
                        items:
                          $ref: "#/components/schemas/trade_record"
                      offers:
                        type: array
                        items:
                          type: string
                  - $ref: "#/components/schemas/apiResponse"
  /check_offer_validity:
    post:
      tags:
        - CAT Wallet
      summary: Checks the validity of an offer.
      description: Checks the validity of an offer.
      operationId: check_offer_validity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - offer
              properties:
                offer:
                  type: string
                  format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      valid:
                        type: boolean
                  - $ref: "#/components/schemas/apiResponse"
  /get_offer_summary:
    post:
      tags:
        - CAT Wallet
      summary: Get the summary of a given offer.
      description: Get the summary of a given offer.
      operationId: get_offer_summary
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - offer
              properties:
                offer:
                  type: string
                  format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      summary:
                        type: object
                        properties:
                          offered:
                            type: object
                            additionalProperties:
                              type: integer
                              format: uint64
                          requested:
                            type: object
                            additionalProperties:
                              type: integer
                              format: uint64
                  - $ref: "#/components/schemas/apiResponse"
  /create_offer_for_ids:
    post:
      tags:
        - CAT Wallet
      summary: Creates an offer.
      description: Creates an offer for the given set of wallet id and amount pairs.
      operationId: create_offer_for_ids
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - offer
              properties:
                offer:
                  type: object
                  additionalProperties:
                    type: integer
                fee:
                  type: integer
                  format: uint64
                  default: 0
                validate_only:
                  type: boolean
                  default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      offer:
                        type: string
                      trade_record:
                        $ref: "#/components/schemas/trade_record"
                  - $ref: "#/components/schemas/apiResponse"
  /cat_asset_id_to_name:
    post:
      tags:
        - CAT Wallet
      summary: Gets the name and wallet id associated with an asset id.
      description: Gets the name and wallet id associated with an asset id.
      operationId: cat_asset_id_to_name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - asset_id
              properties:
                asset_id:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      name:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /cat_get_asset_id:
    post:
      tags:
        - CAT Wallet
      summary: Gets the asset id of the CAT wallet.
      description: Gets the asset id of the CAT wallet.
      operationId: cat_get_asset_id
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      asset_id:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /cat_spend:
    post:
      tags:
        - CAT Wallet
      summary: Spends an amount from the given wallet.
      description: Spends an amount from the given wallet.
      operationId: cat_spend
      requestBody:
        description: Request body with the Id of a wallet.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - amount
                - inner_address
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                amount:
                  type: integer
                  format: uint64
                fee:
                  type: integer
                  format: uint64
                  default: 0
                inner_address:
                  type: string
                  format: hex
                memos:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          $ref: "#/components/responses/transaction_record"
  /cat_set_name:
    post:
      tags:
        - CAT Wallet
      summary: Sets the name of the CAT wallet.
      description: Sets the name of the CAT wallet.
      operationId: cat_set_name
      requestBody:
        description: Request body with the Id of a wallet
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - name
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                name:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /cat_get_name:
    post:
      tags:
        - CAT Wallet
      summary: Gets the name of the CAT wallet.
      description: Gets the name of the CAT wallet.
      operationId: cat_get_name
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      name:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /pw_join_pool:
    post:
      tags:
        - Pool Wallet
      summary: Joins the given wallet to a pool.
      description: Joins the given wallet to a pool.
      operationId: pw_join_pool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - pool_url
                - relative_lock_height
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                target_puzzlehash:
                  type: string
                  format: hex
                pool_url:
                  type: string
                  format: url
                relative_lock_height:
                  type: integer
                  format: uint32
                fee:
                  type: integer
                  format: uint64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transaction:
                        $ref: "#/components/schemas/transaction_record"
                      total_fee:
                        type: integer
                        format: uint64
                  - $ref: "#/components/schemas/apiResponse"
  /pw_self_pool:
    post:
      tags:
        - Pool Wallet
      summary: Removes the given wallet to a pool.
      description: Removes the given wallet to a pool.
      operationId: pw_self_pool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                fee:
                  type: integer
                  format: uint64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transaction:
                        $ref: "#/components/schemas/transaction_record"
                      total_fee:
                        type: integer
                        format: uint64
                  - $ref: "#/components/schemas/apiResponse"
  /pw_absorb_rewards:
    post:
      tags:
        - Pool Wallet
      summary: Perform a sweep of the p2_singleton rewards controlled by the pool wallet singleton.
      description: Perform a sweep of the p2_singleton rewards controlled by the pool wallet singleton.
      operationId: pw_absorb_rewards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                fee:
                  type: integer
                  format: uint64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transaction:
                        $ref: "#/components/schemas/transaction_record"
                      state:
                        $ref: "#/components/schemas/pool_wallet_info"
                  - $ref: "#/components/schemas/apiResponse"
  /pw_status:
    post:
      tags:
        - Pool Wallet
      summary: Return the complete state of the given Pool wallet.
      description: Return the complete state of the given Pool wallet.
      operationId: pw_status
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      unconfirmed_transactions:
                        type: array
                        items:
                          $ref: "#/components/schemas/transaction_record"
                      state:
                        $ref: "#/components/schemas/pool_wallet_info"
                  - $ref: "#/components/schemas/apiResponse"
  /add_rate_limited_funds:
    post:
      tags:
        - Rate Limited Wallet
      summary: Adds rate limited funds.
      description: Adds rate limited funds.
      operationId: add_rate_limited_funds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - amount
                - fee
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                amount:
                  type: integer
                  format: uint64
                fee:
                  type: integer
                  format: uint64
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /rl_set_user_info:
    post:
      tags:
        - Rate Limited Wallet
      summary: Sets user info on a rate limited wallet.
      description: Sets user info on a rate limited wallet.
      operationId: rl_set_user_info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                interval:
                  type: integer
                  format: uint64
                limit:
                  type: integer
                  format: uint64
                admin_pubkey:
                  type: string
                  format: hex
                origin:
                  type: object
                  properties:
                    parent_coin_info:
                      type: string
                      format: hex
                    puzzle_hash:
                      type: string
                      format: hex
                    amount:
                      type: integer
                      format: uint64
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /send_clawback_transaction:
    post:
      tags:
        - Rate Limited Wallet
      summary: Sends a clawback transaction.
      description: Sends a clawback transaction.
      operationId: send_clawback_transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - fee
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                fee:
                  type: integer
                  format: uint64
      responses:
        "200":
          $ref: "#/components/responses/transaction_record"
  /create_signed_transaction:
    post:
      tags:
        - Wallet
      summary: Creates and signs a transaction.
      description: Creates and signs a transaction.
      operationId: create_signed_transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/transaction_input"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      signed_tx:
                        $ref: "#/components/schemas/transaction_record"
                  - $ref: "#/components/schemas/apiResponse"
  /send_transaction:
    post:
      tags:
        - Wallet
      summary: Sends an amount of mojo from then given wallet to the given address.
      description: Sends an amount of mojo from then given wallet to the given address.
      operationId: send_transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - amount
                - address
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                amount:
                  type: integer
                  format: uint64
                address:
                  type: string
                  format: hex
                fee:
                  type: integer
                  format: uint64
                memos:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          $ref: "#/components/responses/transaction_record"
  /send_transaction_multi:
    post:
      tags:
        - Wallet
      summary: Sends multiple transactions from then given wallet.
      description: Sends multiple transactions from then given wallet.
      operationId: send_transaction_multi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - wallet_id
                  properties:
                    wallet_id:
                      type: integer
                      format: uint32
                - $ref: "#/components/schemas/transaction_input"
      responses:
        "200":
          $ref: "#/components/responses/transaction_record"
  /get_wallet_balance:
    post:
      tags:
        - Wallet
      summary: Retrieves the balance of a specific wallet.
      description: Retrieves the balance of a specific wallet (in units of mojos).
      operationId: get_wallet_balance
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - wallet_balance
                    properties:
                      wallet_balance:
                        $ref: "#/components/schemas/wallet_balance"
                  - $ref: "#/components/schemas/apiResponse"
  /get_farmed_amount:
    post:
      tags:
        - Wallet
      summary: Retrieves the amount farmed.
      description: Retrieves the amount farmed.
      operationId: get_farmed_amount
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/farmer_rewards"
                  - $ref: "#/components/schemas/apiResponse"
  /delete_unconfirmed_transactions:
    post:
      tags:
        - Wallet
      summary: Delete all unconfirmed transactions for a given wallet.
      description: Delete all unconfirmed transactions for a given wallet.
      operationId: delete_unconfirmed_transactions
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /get_transaction:
    post:
      tags:
        - Wallet
      summary: Retrieves a specific transaction.
      description: Retrieves a specific transaction.
      operationId: get_transaction
      requestBody:
        $ref: "#/components/requestBodies/transaction_id"
      responses:
        "200":
          $ref: "#/components/responses/transaction_record"
  /get_transactions:
    post:
      tags:
        - Wallet
      summary: Retrieves a list of trnsactions from a wallet.
      description: Retrieves a list of trnsactions from a wallet.
      operationId: get_transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                start:
                  type: integer
                  format: uint32
                  default: 0
                end:
                  type: integer
                  format: uint32
                  default: 50
                sort_key:
                  type: string
                reverse:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          $ref: "#/components/schemas/transaction_record"
                      wallet_id:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /get_transaction_count:
    post:
      tags:
        - Wallet
      summary: Retrieves the number of transactions for a wallet.
      description: Retrieves the number of transactions for a wallet.
      operationId: get_transaction_count
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      count:
                        type: integer
                      wallet_id:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /get_next_address:
    post:
      tags:
        - Wallet
      summary: Returns a new address.
      description: Returns a new address.
      operationId: get_next_address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                new_address:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      address:
                        type: string
                        format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /get_network_info:
    post:
      tags:
        - Wallet Node
      summary: Retrieves some information about the current network.
      description: Retrieves some information about the current network.
      operationId: wallet_get_network_info
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/network_info"
                  - $ref: "#/components/schemas/apiResponse"
  /log_in:
    post:
      tags:
        - Key Management
      summary: Logs in the wallet with a specific key.
      description: Logs in the wallet with a specific key.
      operationId: log_in
      requestBody:
        $ref: "#/components/requestBodies/fingerprint"
      responses:
        "200":
          $ref: "#/components/responses/fingerprint"
  /get_logged_in_fingerprint:
    post:
      tags:
        - Key Management
      summary: Retrieves the logged in fingerprint.
      description: Retrieves the logged in fingerprint.
      operationId: get_logged_in_fingerprint
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          $ref: "#/components/responses/fingerprint"
  /get_public_keys:
    post:
      tags:
        - Key Management
      summary: Retrieves all public keys on the node.
      description: Retrieves all public keys on the node.
      operationId: get_public_keys
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      public_key_fingerprints:
                        type: array
                        items:
                          type: integer
                          format: uint32
                  - type: object
                    properties:
                      keyring_is_locked:
                        type: boolean
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
  /get_private_key:
    post:
      tags:
        - Key Management
      summary: Retrieves the private key by fingerprint.
      description: Retrieves the private key by fingerprint.
      operationId: get_private_key
      requestBody:
        $ref: "#/components/requestBodies/fingerprint"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: Return type if the private key is found.
                    properties:
                      private_key:
                        $ref: "#/components/schemas/private_key"
                  - type: object
                    description: Return type if the private key is not found.
                    properties:
                      private_key:
                        type: object
                        properties:
                          fingerprint:
                            type: integer
                            format: uint32
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
  /generate_mnemonic:
    post:
      tags:
        - Key Management
      summary: Generates a new mnemonic phrase.
      description: Generates a new mnemonic phrase.
      operationId: generate_mnemonic
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mnemonic"
  /add_key:
    post:
      tags:
        - Key Management
      summary: Generates a new mnemonic phrase.
      description: Generates a new mnemonic phrase.
      operationId: add_key
      requestBody:
        description: The mnemonic phrase.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mnemonic"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: The fingerprint of the new key.
                    properties:
                      private_key:
                        type: object
                        properties:
                          fingerprint:
                            type: integer
                            format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /delete_key:
    post:
      tags:
        - Key Management
      summary: Deletes all keys which have the given public key fingerprint.
      description: Deletes all keys which have the given public key fingerprint.
      operationId: delete_key
      requestBody:
        $ref: "#/components/requestBodies/fingerprint"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /check_delete_key:
    post:
      tags:
        - Key Management
      summary: Determines if it is safe to delete a private key.
      description: Determines if it is safe to delete a private key. Returns whether it is used for farming, pooling, or has a balance.
      operationId: check_delete_key
      requestBody:
        $ref: "#/components/requestBodies/fingerprint"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      fingerprint:
                        type: integer
                        format: uint32
                      used_for_farmer_rewards:
                        type: boolean
                      used_for_pool_rewards:
                        type: boolean
                      wallet_balance:
                        type: boolean
                  - $ref: "#/components/schemas/apiResponse"
  /delete_all_keys:
    post:
      tags:
        - Key Management
      summary: Deletes all keys from the keychain.
      description: Deletes all keys from the keychain.
      operationId: wallet_delete_all_keys
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /get_sync_status:
    post:
      tags:
        - Wallet Node
      summary: Retrieves the sync status of the wallet.
      description: Retrieves the sync status of the wallet.
      operationId: get_sync_status
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      synced:
                        type: boolean
                      syncing:
                        type: boolean
                      genesis_initialized:
                        type: boolean
                  - $ref: "#/components/schemas/apiResponse"
  /get_height_info:
    post:
      tags:
        - Wallet Node
      summary: Retrieves the sync height of the wallet.
      description: Retrieves the sync height of the wallet.
      operationId: get_height_info
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      height:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /push_tx:
    post:
      tags:
        - Wallet Node
      description: Pushes a transaction/spend bundle to the mempool and blockchain. Returns whether the spend bundle was successfully included into the mempool.
      summary: Pushes a transaction/spend bundle to the mempool and blockchain.
      operationId: wallet_push_tx
      requestBody:
        required: true
        description: The spend bundle
        content:
          application/json:
            schema:
              type: object
              required:
                - spend_bundle
              properties:
                spend_bundle:
                  $ref: "#/components/schemas/spend_bundle"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /get_wallets:
    post:
      tags:
        - Wallet Management
      description: Retrieves all of the wallets on the node.
      summary: Retrieves all of the wallets on the node.
      operationId: get_wallets
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallets:
                        type: array
                        items:
                          $ref: "#/components/schemas/wallet_info"
                  - $ref: "#/components/schemas/apiResponse"
  /create_new_wallet:
    post:
      tags:
        - Wallet Management
      description: Creates a new wallet.
      summary: Creates a new wallet.
      operationId: create_new_wallet
      requestBody:
        required: true
        description: Details of the wallet to create.
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_type
              properties:
                wallet_type:
                  type: string
                  description: The type of wallet to create.
                  enum:
                    - cat_wallet
                    - rl_wallet
                    - did_wallet
                    - pool_wallet
                name:
                  type: string
                  description: User supplied name for the wallet. Will default if not provided.
                amount:
                  type: integer
                  format: uint64
                  description: The amount of mojo to deposit in the new wallet.
                fee:
                  type: integer
                  format: uint64
                  default: 0
                  description: The transaction fee amount in mojo.
              oneOf:
                - type: object
                  description: Details needed to create a cat_wallet.
                  properties:
                    mode:
                      type: string
                      enum:
                        - new
                        - existing
                    asset_id:
                      type: string
                      description: Only used when `mode` is 'existing'
                - type: object
                  description: Details needed to create a rl_wallet.
                  required:
                    - rl_type
                  properties:
                    rl_type:
                      type: string
                      description: The type of RL Wallet to create.
                      enum:
                        - admin
                        - user
                    interval:
                      type: integer
                      format: uint64
                      description: Rate interval - needed for admin creation only.
                    limit:
                      type: integer
                      format: uint64
                      description: Rate limit - needed for admin creation only.
                    pubkey:
                      type: string
                      format: hex
                      description: Public key - needed for admin creation only.
                - type: object
                  description: Details needed to create a did_wallet.
                  required:
                    - did_type
                  properties:
                    did_type:
                      type: string
                      description: The type of DID wallet to create.
                      enum:
                        - new
                        - recovery
                  oneOf:
                    - type: object
                      description: Details needed for creating a new DID wallet.
                      properties:
                        backup_dids:
                          type: array
                          items:
                            type: string
                            format: hex
                        num_of_backup_ids_needed:
                          type: integer
                          format: uint64
                    - type: object
                      description: Details needed to create a recovery DID wallet.
                      properties:
                        filename:
                          type: string
                - type: object
                  description: Details needed to create a pool_wallet.
                  required:
                    - mode
                  properties:
                    mode:
                      type: string
                      description: The pooling mode.
                      enum:
                        - new
                        - recovery
                    initial_target_state:
                      $ref: "#/components/schemas/pool_state"
                    p2_singleton_delayed_ph:
                      type: string
                      format: hex
                    p2_singleton_delay_time:
                      type: integer
                      format: uint64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: Response when a CAT wallet is created.
                    properties:
                      type:
                        $ref: "#/components/schemas/wallet_type"
                      asset_id:
                        type: string
                        format: hex
                      wallet_id:
                        type: integer
                        format: uint32
                  - type: object
                    description: Response when a RL wallet is created.
                    properties:
                      id:
                        type: integer
                        format: uint32
                      type:
                        $ref: "#/components/schemas/wallet_type"
                      origin:
                        $ref: "#/components/schemas/coin"
                      pubkey:
                        type: string
                        format: hex
                  - type: object
                    description: Response when a new DID wallet is created.
                    properties:
                      type:
                        $ref: "#/components/schemas/wallet_type"
                      my_did:
                        type: string
                        format: hex
                      wallet_id:
                        type: integer
                        format: uint32
                  - type: object
                    description: Response when a recovery DID wallet is created.
                    properties:
                      type:
                        $ref: "#/components/schemas/wallet_type"
                      my_did:
                        type: string
                        format: hex
                      wallet_id:
                        type: integer
                        format: uint32
                      coin_name:
                        type: string
                        format: hex
                      coin_list:
                        $ref: "#/components/schemas/coin"
                      newpuzhash:
                        type: string
                        format: hex
                      pubkey:
                        type: string
                        format: hex
                      backup_dids:
                        type: array
                        items:
                          type: string
                          format: hex
                      num_verifications_required:
                        type: integer
                        format: uint64
                  - type: object
                    description: Response when a new pool wallet is created.
                    properties:
                      total_fee:
                        type: integer
                        format: uint64
                      transaction:
                        $ref: "#/components/schemas/transaction_record"
                      launcher_id:
                        type: string
                        format: hex
                      p2_singleton_puzzle_hash:
                        type: string
                        format: hex
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
externalDocs:
  description: Find out more about chia
  url: https://chia.net
